<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Distribuir Pontos</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f5f5f5;
            color: #333;
            transition: all 0.3s ease;
        }
        h1 {
            color: #333;
            border-bottom: 2px solid #ddd;
            padding-bottom: 10px;
            text-align: center;
            font-size: 2.2em;
            margin-bottom: 20px;
            text-shadow: 1px 1px 2px rgba(0,0,0,0.1);
        }
        form {
            background-color: white;
            padding: 25px;
            border-radius: 12px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.15);
            transition: all 0.3s ease;
            border: 1px solid #e0e0e0;
        }

        @media (prefers-color-scheme: dark) {
            body {
                background-color: #0a0a0a;
                color: #f0f0f0;
            }
            h1 {
                color: #4CAF50;
                border-bottom-color: #333;
                text-shadow: 0 0 5px rgba(76,175,80,0.3);
            }
            form {
                background-color: #1a1a1a;
                box-shadow: 0 4px 12px rgba(0,0,0,0.5);
                border-color: #333;
            }
            input[type="number"] {
                background-color: #252525;
                color: #4CAF50;
                border-color: #4CAF50;
            }
            input[type="number"]:focus {
                border-color: #4d9eff;
                box-shadow: 0 0 8px rgba(77,158,255,0.4);
            }
            .disabled {
                background-color: #333;
            }
            #pontos-disponiveis {
                color: #4CAF50;
                font-weight: bold;
                font-size: 1.4em;
            }
        }
        div {
            margin-bottom: 15px;
            display: flex;
            align-items: center;
        }
        label {
            width: 120px;
            font-weight: bold;
        }
        span {
            width: 40px;
            text-align: right;
            margin-right: 5px;
        }
        .number-controls {
            display: flex;
            align-items: center;
            gap: 5px;
        }
        input[type="number"] {
            width: 60px;
            padding: 8px;
            border: 2px solid #4CAF50;
            border-radius: 6px;
            font-size: 1.1em;
            text-align: center;
            transition: all 0.2s ease;
            background-color: #f8f8f8;
        }
        .number-btn {
            width: 30px;
            height: 30px;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 16px;
            font-weight: bold;
            transition: all 0.2s ease;
        }
        .number-btn:hover {
            background-color: #3e8e41;
        }
        .number-btn:active {
            transform: scale(0.95);
        }
        input[type="number"]:focus {
            border-color: #2a6496;
            box-shadow: 0 0 5px rgba(42,100,150,0.3);
            transform: scale(1.05);
        }
        input[type="number"]:hover {
            border-color: #2a6496;
        }
        button {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 12px 25px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 18px;
            font-weight: bold;
            transition: all 0.3s ease;
            box-shadow: 0 3px 6px rgba(0,0,0,0.1);
            display: block;
            width: 100%;
            margin-top: 15px;
            text-transform: uppercase;
            letter-spacing: 1px;
        }
        button:disabled {
            background-color: #cccccc;
            cursor: not-allowed;
            transform: none !important;
            box-shadow: none;
        }
        button:not(:disabled):hover {
            background-color: #3e8e41;
            transform: translateY(-2px);
            box-shadow: 0 5px 10px rgba(0,0,0,0.2);
        }
        button:not(:disabled):active {
            transform: translateY(1px);
        }
        #pontos-disponiveis {
            font-size: 1.4em;
            color: #2a6496;
            transition: all 0.3s ease;
            display: inline-block;
        }
        .points-change {
            animation: pulse 0.5s ease;
        }
        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.2); }
            100% { transform: scale(1); }
        }
        .disabled {
            background-color: #eee;
            pointer-events: none;
        }

        @media (max-width: 600px) {
            body {
                padding: 10px;
            }
            form {
                padding: 15px;
            }
            .header h1 {
                font-size: 1.5em;
            }
            button {
                width: 100%;
                padding: 12px;
            }
        }

        @media (max-width: 600px) and (prefers-color-scheme: dark) {
            input[type="number"] {
                background-color: #2d2d2d;
                color: #ffffff;
                border-color: #444;
            }
        }
    </style>
    
</head>
<body>

    <div class="header">
        <h1>Distribuir Pontos - <%= user.data.nome %></h1>
        <p>Pontos extras dispon√≠veis: <strong id="pontos-disponiveis"><%= user.data.atributos.extra %></strong></p>
    </div>
    <form method="POST" action="/pontos/<%= user.password %>" class="atributos-form">
        <% const atr = user.data.atributos; %>

        <% const atributos = ['forca', 'resistencia', 'velocidade', 'agilidade']; %>

        <% atributos.forEach(attr => { %>
            <div>
                <label><%= attr.charAt(0).toUpperCase() + attr.slice(1) %>:</label>
                <span><%= atr[attr] %></span> + 
                <div class="number-controls">
                    <button type="button" class="number-btn minus-btn" data-attr="<%= attr %>">-</button>
                    <input 
                        type="number" 
                        name="<%= attr %>" 
                        value="0" 
                        min="0" 
                        max="<%= user.data.atributos.extra %>" 
                        class="atributo"
                    >
                    <button type="button" class="number-btn plus-btn" data-attr="<%= attr %>">+</button>
                </div>
            </div>
        <% }); %>

        <% if (user.nen) { %>
            <div>
                <label>Nen:</label>
                <span><%= atr.nen %></span> +
                <div class="number-controls">
                    <button type="button" class="number-btn minus-btn" data-attr="nen">-</button>
                    <input 
                        type="number" 
                        name="nen" 
                        value="0" 
                        min="0" 
                        max="<%= user.data.atributos.extra %>" 
                        class="atributo"
                    >
                    <button type="button" class="number-btn plus-btn" data-attr="nen">+</button>
                </div>
            </div>
        <% } else { %>
            <div>
                <label>Nen:</label>
                <span><%= atr.nen %></span> (bloqueado)
            </div>
        <% } %>

        <br>
        <button type="submit" id="enviar" disabled>Confirmar</button>
    </form>
    <script>
    const inputs = document.querySelectorAll('.atributo');
    const totalDisponivel = <%- JSON.stringify(user.data.atributos.extra || 0) %>;
    const pontosTexto = document.getElementById('pontos-disponiveis');
    const botao = document.getElementById('enviar');

    function atualizarEstado() {
        let soma = 0;
        let invalido = false;

        inputs.forEach(input => {
            const valor = parseInt(input.value) || 0;

            if (valor < 0) {
                invalido = true;
                input.value = 0;
            }

            soma += valor;
        });

        const restante = totalDisponivel - soma;
        pontosTexto.textContent = restante;
        pontosTexto.classList.add('points-change');
        setTimeout(() => pontosTexto.classList.remove('points-change'), 500);

        if (invalido || soma > totalDisponivel || soma < 0) {
            botao.disabled = true;
            pontosTexto.style.color = 'red';
        } else {
            botao.disabled = soma === 0;
            pontosTexto.style.color = '';
        }
    }

    inputs.forEach(input => {
        input.addEventListener('input', atualizarEstado);
    });

    document.querySelectorAll('.plus-btn').forEach(btn => {
        btn.addEventListener('click', () => {
            const attr = btn.dataset.attr;
            const input = document.querySelector(`input[name="${attr}"]`);
            if (parseInt(pontosTexto.textContent) > 0) {
                input.value = parseInt(input.value) + 1;
                input.dispatchEvent(new Event('input'));
            }
        });
    });

    document.querySelectorAll('.minus-btn').forEach(btn => {
        btn.addEventListener('click', () => {
            const attr = btn.dataset.attr;
            const input = document.querySelector(`input[name="${attr}"]`);
            if (parseInt(input.value) > 0) {
                input.value = parseInt(input.value) - 1;
                input.dispatchEvent(new Event('input'));
            }
        });
    });
</script>
</body>
</html>
